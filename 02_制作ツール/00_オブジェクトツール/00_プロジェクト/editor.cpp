//=============================================================================
//
// エディター処理 [editor.cpp]
// Author : Jukiya Hayakawa
//
//=============================================================================
#include "editor.h"
#include "scene.h"
#include "scene2D.h"
#include "renderer.h"
#include "input.h"
#include "manager.h"
#include "meshfield.h"
#include "debugproc.h"
#include "fade.h"
#include "object.h"
#include "map.h"
#include "objectplayer.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
CMeshField	*CEditor::m_pMeshField = NULL;			//メッシュフィールドのポインタ情報
CMap		*CEditor::m_pMap = NULL;					//マップのポインタ情報
CObjectPlayer	*CEditor::m_pObjectPlayer;			//オブジェクトプレイヤーのポインタ情報

//=============================================================================
// マクロ定義
//=============================================================================


//=============================================================================
// エディターのコンストラクタ
//=============================================================================
CEditor::CEditor()
{

}

//=============================================================================
// エディターのデストラクタ
//=============================================================================
CEditor::~CEditor()
{
	m_pMeshField = NULL;	//メッシュフィールドを初期化
	m_pMap = NULL;			//マップを初期化
}

//=============================================================================
// エディターのデストラクタ
//=============================================================================
CEditor *CEditor::Create()
{
	CEditor *pEditor = NULL;	//エディターのポインタ
	if (pEditor == NULL)
	{
		pEditor = new CEditor;	//動的確保
		if (pEditor != NULL)
		{
			pEditor->Init();	//初期化処理
		}
	}
	return pEditor;
}

//=============================================================================
// エディターの初期化処理
//=============================================================================
HRESULT CEditor::Init(void)
{
	//マップを生成
	m_pMap = CMap::Create();

	//メッシュフィールドの生成
	m_pMeshField = CMeshField::Create(D3DXVECTOR3(0.0f,1.0f,0.0f));

	m_pObjectPlayer = CObjectPlayer::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f));

	return S_OK;
}

//=============================================================================
// エディターの終了処理
//=============================================================================
void CEditor::Uninit(void)
{
	//マップの終了処理
	if (m_pMap != NULL)
	{
		m_pMap->Uninit();
		delete m_pMap;
		m_pMap = NULL;
	}

	//全てのオブジェクト開放
	CScene::ReleaseAll();
}

//=============================================================================
// エディターの更新処理
//=============================================================================
void CEditor::Update(void)
{
	//キーボードの取得
	CInputKeyboard *pInputKeyboard;
	pInputKeyboard = CManager::GetKeyboard();

	//フェードの取得処理
	CFade *pFade = CManager::GetFade();

	if (m_pMap != NULL)
	{
		if (pInputKeyboard->GetTrigger(DIK_F2) == true)
		{//Enterキーを押下した場合
			m_pMap->SaveObject();
		}
	}
}

//=============================================================================
// エディターの描画処理
//=============================================================================
void CEditor::Draw(void)
{
}

//=============================================================================
// オブジェクト3Dの取得
//=============================================================================
CMeshField *CEditor::GetMeshField(void)
{
	return m_pMeshField;				//値を返す
}

//=============================================================================
// オブジェクトプレイヤーの取得
//=============================================================================
CObjectPlayer *CEditor::GetObjectPlayer(void)
{
	return m_pObjectPlayer;				//値を返す
}

//=============================================================================
// マップの取得
//=============================================================================
CMap * CEditor::GetMap(void)
{
	return m_pMap;
}
